name: Workspace Tester

on:
  push:
    branches: ['monorepo-v7']
    paths:
      - '**/workspace-tester.yml'
  workflow_dispatch:
  workflow_call:
    inputs:
      os:
        required: false
        type: string
        default: 'ubuntu-latest'
        description: 'Operation system to be used'
      node-version:
        required: false
        type: string
        description: 'Node version to be used'
        default: '14.x'
    secrets:
      ACCESS_TOKEN:
        required: true

permissions: write-all

jobs:
  build:
    if: ${{ github.event_name == 'push' }}
    uses: ./.github/workflows/workspace-builder.yml
    secrets:
      ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
  tester:
    needs: build
    runs-on: ${{ inputs.os || 'ubuntu-latest' }}
    # set timeout - see https://stackoverflow.com/a/59076067/6404439
    timeout-minutes: 120
    strategy:
      fail-fast: true
      #max-parallel: 3
    env:
      NODE_OPTIONS: '--max_old_space_size=8192' #8192 4096 --expose-gc
      YARN_ENABLE_IMMUTABLE_INSTALLS: false
      ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      node_version: ${{ inputs.node-version || '14.x' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Let's get all the branches
          submodules: recursive
          token: '${{ secrets.ACCESS_TOKEN }}'
          ref: 'monorepo-v7'
      - name: update submodules
        run: |
          echo "init submodules"
          git submodule init
          git submodule foreach "git submodule init"
          echo "sync submodules"
          git submodule sync
          git submodule foreach "git submodule sync"
          echo "update submodules"
          mkdir -p bin >/dev/null 2>&1
          curl -L https://github.com/dimaslanjaka/bin/raw/master/bin/submodule-install > bin/submodule-install
          rm -rf .git/modules
          bash ./bin/submodule-install
        shell: bash
      - name: Use Node.js ${{ env.node_version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}
      - name: Enable corepack
        shell: bash
        run: corepack enable
      - uses: pat-s/always-upload-cache@v3.0.11
        id: cache
        with:
          path: |
            **/.yarn
            ./release*
            ./yarn.lock
            ./packages/**/dist
          key: ${{ runner.os }}-${{ env.node_version }}
          restore-keys: |
            ${{ runner.os }}-${{ env.node_version }}
            ${{ runner.os }}-
      - name: Download build-output artifact
        uses: actions/download-artifact@master
        with:
          name: build-output
      - name: Install Dependencies
        run: |
          touch yarn.lock
          yarn install
          npm run prepare
          yarn workspaces foreach run postinstall
        shell: bash
      - name: hexo-util
        run: 'yarn workspace hexo-util exec "npm test"'
      - name: hexo-log
        run: 'yarn workspace hexo-log exec "npm test"'
      - name: warehouse
        run: 'yarn workspace warehouse exec "npm test"'
      - name: hexo-cli
        run: 'yarn workspace hexo-cli exec "npm test"'
      - name: hexo-front-matter
        run: 'yarn workspace hexo-front-matter exec "npm test"'
      - name: hexo
        run: 'yarn workspace hexo exec "npm test"'
